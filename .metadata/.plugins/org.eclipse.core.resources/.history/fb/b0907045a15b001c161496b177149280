package com.jquevedo.controller;

import java.net.URI;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.jquevedo.model.Usuarios;
import com.jquevedo.repo.UsuarioRepo;
import com.jquevedo.service.UsuarioService;

@RestController
@RequestMapping("/Usuario")
public class UsuarioController {

	Logger logger = LoggerFactory.getLogger(UsuarioController.class);
	@Autowired
	UsuarioService service;
	
	@Autowired
	UsuarioRepo repo;

	@PostMapping
	public ResponseEntity<Usuarios> registrar(@RequestBody Usuarios u) throws Exception {
		logger.info("Solicitud para crear el usuario" + u);
		Usuarios user = repo.findOneByUsername(u.getUsername());
		if(user != null) {
			throw 
		}
		BCryptPasswordEncoder encoder = new BCryptPasswordEncoder();
		u.setPassword(encoder.encode(u.getPassword()));
		Usuarios us = service.registrar(u);
		URI location = ServletUriComponentsBuilder.fromCurrentRequest().path("/{id}").buildAndExpand(us.getIdUsuario())
				.toUri();
		return ResponseEntity.created(location).build();
	}
}
